{"ast":null,"code":"var _jsxFileName = \"/home/vivers/Downloads/my-app/src/Tabs.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport tabList from \"./data/tabs.json\";\nimport AddBoxTwoToneIcon from \"@material-ui/icons/AddBoxTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function SimpleTabs() {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [tabs, settabs] = React.useState(tabList);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"simple tabs example\",\n        children: tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n          label: tab.tabLabel,\n          icon: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            onClick: () => removeTab(tab.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddBoxTwoToneIcon, {\n        onClick: addTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: value,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  function removeTab(ID) {\n    const newList = tabs.filter(tab => tab.id !== ID);\n    settabs(newList);\n  }\n\n  function addTab() {\n    settabs([...tabs, {\n      id: tabs.length + 1,\n      value: tabs.length + 1,\n      tabLabel: \"NEW TAB\"\n    }]);\n  }\n}\n\n_s(SimpleTabs, \"2by7DWS/QeyFzHgChx8ZoalNA38=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleTabs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SimpleTabs\");","map":{"version":3,"sources":["/home/vivers/Downloads/my-app/src/Tabs.tsx"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","tabList","AddBoxTwoToneIcon","CloseIcon","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","classes","setValue","useState","tabs","settabs","handleChange","event","newValue","map","tab","tabLabel","removeTab","addTab","ID","newList","filter","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport tabList from \"./data/tabs.json\";\nimport AddBoxTwoToneIcon from \"@material-ui/icons/AddBoxTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\ninterface tabProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\ninterface tab {\n  id: number;\n  value: number;\n  tabLabel: String;\n}\nfunction TabPanel(props: tabProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [tabs, settabs] = React.useState<tab[]>(tabList);\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          {tabs.map((tab) => (\n            <Tab\n              label={tab.tabLabel}\n              icon={<CloseIcon onClick={() => removeTab(tab.id)} />}\n            ></Tab>\n          ))}\n        </Tabs>\n        <AddBoxTwoToneIcon onClick={addTab} />\n      </AppBar>\n\n      <TabPanel value={value} key={value} index={value}>\n        <div></div>\n      </TabPanel>\n    </div>\n  );\n\n  function removeTab(ID: number) {\n    const newList = tabs.filter((tab) => tab.id !== ID);\n    settabs(newList);\n  }\n  function addTab() {\n    settabs([\n      ...tabs,\n      { id: tabs.length + 1, value: tabs.length + 1, tabLabel: \"NEW TAB\" },\n    ]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}