{"ast":null,"code":"var _jsxFileName = \"/home/vivers/Downloads/my-app/src/Tabs.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport tabList from \"./data/tabs.json\";\nimport AddBoxTwoToneIcon from \"@material-ui/icons/AddBoxTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBarsCombined from \"./AppBArCombined\";\nimport SpreadSheet from \"./SpreadSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    borderTop: \"solid\",\n    borderTopWidth: \"thin\"\n  },\n  bg: {\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  tab: {\n    overflow: \"true\",\n    backgroundColor: \"white\",\n    borderRadius: \"10px 10px 0px 0px\"\n  },\n  add: {\n    color: \"black\",\n    marginLeft: \"60px\",\n    marginTop: \"12px\"\n  },\n  panel: {\n    backgroundColor: \"grey\"\n  },\n  bg1: {\n    marginLeft: \"128px\",\n    marginBottom: \"-20px !important\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: \"15px\"\n  }\n}));\n\nfunction TabPanel(props) {\n  _s();\n\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TabPanel, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nexport default function SimpleTabs() {\n  _s2();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [tabs, settabs] = React.useState(tabList);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.bg,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        className: classes.panel,\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"simple tabs example\",\n        children: [tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n          label: tab.tabLabel.length > 15 ? tab.tabLabel.slice(0, 10) + \"...\" : tab.tabLabel,\n          icon: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            className: classes.bg1,\n            onClick: () => removeTab(tab.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(AddBoxTwoToneIcon, {\n          className: classes.add,\n          onClick: addTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBarsCombined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: value,\n      children: /*#__PURE__*/_jsxDEV(SpreadSheet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n\n  function removeTab(ID) {\n    const newList = tabs.filter(tab => tab.id !== ID);\n    settabs(newList);\n  }\n\n  function addTab() {\n    settabs([...tabs, {\n      id: tabs.length + 1,\n      value: tabs.length + 1,\n      tabLabel: \"NEW TAB\"\n    }]);\n  }\n}\n\n_s2(SimpleTabs, \"2by7DWS/QeyFzHgChx8ZoalNA38=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleTabs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SimpleTabs\");","map":{"version":3,"sources":["/home/vivers/Downloads/my-app/src/Tabs.tsx"],"names":["React","PropTypes","AppBar","Tabs","Tab","Typography","Box","tabList","AddBoxTwoToneIcon","CloseIcon","makeStyles","AppBarsCombined","SpreadSheet","useStyles","theme","root","flexGrow","borderTop","borderTopWidth","bg","backgroundColor","color","tab","overflow","borderRadius","add","marginLeft","marginTop","panel","bg1","marginBottom","fontSize","TabPanel","props","children","value","index","other","classes","propTypes","node","any","isRequired","a11yProps","id","SimpleTabs","setValue","useState","tabs","settabs","handleChange","event","newValue","map","tabLabel","length","slice","removeTab","addTab","ID","newList","filter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport tabList from \"./data/tabs.json\";\nimport AddBoxTwoToneIcon from \"@material-ui/icons/AddBoxTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBarsCombined from \"./AppBArCombined\";\nimport SpreadSheet from \"./SpreadSheet\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    borderTop: \"solid\",\n    borderTopWidth: \"thin\",\n  },\n  bg: {\n    backgroundColor: \"white\",\n    color: \"black\",\n  },\n  tab: {\n    overflow: \"true\",\n    backgroundColor: \"white\",\n    borderRadius: \"10px 10px 0px 0px\",\n  },\n  add: {\n    color: \"black\",\n    marginLeft: \"60px\",\n    marginTop: \"12px\",\n  },\n  panel: {\n    backgroundColor: \"grey\",\n  },\n  bg1: {\n    marginLeft: \"128px\",\n    marginBottom: \"-20px !important\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: \"15px\",\n  },\n}));\n\ninterface tabProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\ninterface tab {\n  id: number;\n  value: number;\n  tabLabel: String;\n}\nfunction TabPanel(props: tabProps) {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [tabs, settabs] = React.useState<tab[]>(tabList);\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.bg}>\n        <Tabs\n          className={classes.panel}\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          {tabs.map((tab) => (\n            <Tab\n              label={\n                tab.tabLabel.length > 15\n                  ? tab.tabLabel.slice(0, 10) + \"...\"\n                  : tab.tabLabel\n              }\n              icon={\n                <CloseIcon\n                  className={classes.bg1}\n                  onClick={() => removeTab(tab.id)}\n                />\n              }\n            ></Tab>\n          ))}\n          <AddBoxTwoToneIcon className={classes.add} onClick={addTab} />\n        </Tabs>\n        <AppBarsCombined></AppBarsCombined>\n      </AppBar>\n      <TabPanel value={value} key={value} index={value}>\n        <SpreadSheet />\n      </TabPanel>\n    </div>\n  );\n\n  function removeTab(ID: number) {\n    const newList = tabs.filter((tab) => tab.id !== ID);\n    settabs(newList);\n  }\n  function addTab() {\n    settabs([\n      ...tabs,\n      { id: tabs.length + 1, value: tabs.length + 1, tabLabel: \"NEW TAB\" },\n    ]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}